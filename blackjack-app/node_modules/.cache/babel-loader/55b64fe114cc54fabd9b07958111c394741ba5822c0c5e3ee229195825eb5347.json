{"ast":null,"code":"import io from'socket.io-client';let info={};const backendUrl=\"https://rngbj.kasoom.com/\";const socket=io(backendUrl,{withCredentials:true,transports:['websocket']});socket.on('disconnect',reason=>{console.log(\"Disconnected: \",reason);if(reason===\"io server disconnect\"){tryReconnect(new Date());}else if(reason===\"transport close\"||reason===\"ping timeout\"){tryReconnect(new Date());}else{console.log(\"Unknown disconnection reason:\",reason);}});socket.on('newState',data=>{console.log(\"NewState Called...\");data.newStatus=true;data.type='newState';console.log(data);window.postMessage(data,\"*\");});socket.on('newClientStatus',data=>{console.log('newClientStatus',data);data.newStatus=true;data.newPrivatestat=true;window.postMessage(data,\"*\");});socket.on('NewBalance',()=>{console.log('New balance function called!');});socket.on(\"showMess\",data=>{console.log(\"Posting message: \",data);data.type=\"showMess\";window.postMessage(data,'*');});socket.on('message',message=>{console.log('Received message:',message);if(typeof message==='string'){const data=JSON.parse(message);if(data.action==='init_response'){setUser(data.info.userId);setPlayer(data.info.sessionId);}}});socket.on('connect_error',error=>{console.log(\"Connection error:\",error.message);});socket.on('error',error=>{console.error('WebSocket Error:',error);});socket.on('reconnect_error',error=>{console.log(\"Reconnection error:\",error.message);});function tryReconnect(disconnectTime){console.log(\"Trying to reconnect... \",socket.connected);if(!socket.connected){socket.connect();setTimeout(()=>{tryReconnect();},4000);}else{console.log(\"Connection reestablished!\");setPlayer(info.tableID,info.playerID);}}function setPlayer(table){console.log('Setting player with table: ',table);let mess={type:'delaerAction',command:'setTable',tableId:table};window.postMessage(mess,'*');info.tableID=table;socket.emit('setPlayer',mess,response=>{console.log('Response: ',response);if(response&&response.error){console.log('Emit error: ',response.error);}else{console.log('Emit successful: ',response);}});}function setUser(player){info.playerID=player;}async function activateGame(token){let operator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';const url=\"\".concat(backendUrl,\"api/init\");console.log(\"Posting token: \",url,token);let res=await fetch(url,{method:\"POST\",body:JSON.stringify({token:token,operator:operator}),credentials:'include',headers:{'Content-type':'application/json; charset=UTF-8','access-control-allow-credentials':true,'withCredentials':true}});let finalRes=await res.json();console.log(\"Activation response: \",finalRes);return finalRes;}const fetchRequest=async(command,method,body)=>{try{const res=await fetch(\"\".concat(backendUrl,\"api/\").concat(command),{method:method,headers:{'Content-Type':'application/json; charset=UTF-8','access-control-allow-credentials':true,'withCredentials':true},credentials:'include',body:JSON.stringify(body)});return await res.json();}catch(err){console.log('Error fetching: ',err);return{status:'azErr',errCode:'fetchErr'};}};const call=async(command,method,body)=>{const res=await fetchRequest(command,method,body);if(res.status==='azErr'){const errCode=res.errCode;if(errCode=='noSession'){const initRes=await init();if(initRes.status==='OK'){return await call(command,method,body);}}console.log('Fetch error: ',res);}return res;};async function init(token){const res=await fetchRequest(\"init?token=\".concat(token),'GET');console.log('Init response: ',res);return res;}const HitApi=async(playerId,tableId)=>call(\"hit/\".concat(playerId,\"/\").concat(tableId),'GET');const splitApi=(playerId,tableId)=>call(\"split/\".concat(playerId,\"/\").concat(tableId),'GET');const DoubleApi=(playerId,tableId)=>call(\"double/\".concat(playerId,\"/\").concat(tableId),'GET');const stateHandApi=(playerId,tableId)=>call(\"stateHand/\".concat(playerId,\"/\").concat(tableId),'GET');const BetApi=(playerId,tableId,newbetAmount,handId)=>call(\"bet/\".concat(playerId,\"/\").concat(tableId,\"/\").concat(handId,\"/\").concat(newbetAmount),'GET');const sideBetApi=(playerId,tableId,newbetAmount,handId,betType)=>call(\"sideBet/\".concat(playerId,\"/\").concat(tableId,\"/\").concat(handId,\"/\").concat(newbetAmount,\"/\").concat(betType),'GET');const StandApi=(playerId,tableId)=>call(\"stand/\".concat(playerId,\"/\").concat(tableId),'GET');const next=(playerId,tableId)=>call(\"next/\".concat(playerId,\"/\").concat(tableId),'GET');const confirmBets=(playerId,tableId)=>call(\"confirmBets/\".concat(playerId,\"/\").concat(tableId),'GET');const isSplitApi=(playerId,tableId)=>call(\"isSplit/\".concat(playerId,\"/\").concat(tableId),'GET');const TotalApi=(playerId,tableId)=>call(\"total/\".concat(playerId,\"/\").concat(tableId),'GET');const insuranceApi=(playerId,tableId,handNo)=>call(\"insurance/\".concat(tableId,\"/\").concat(playerId,\"/\").concat(handNo),'GET');export{setUser,HitApi,splitApi,stateHandApi,BetApi,StandApi,DoubleApi,isSplitApi,init,TotalApi,insuranceApi,next,confirmBets,setPlayer,sideBetApi,activateGame};","map":{"version":3,"names":["io","info","backendUrl","socket","withCredentials","transports","on","reason","console","log","tryReconnect","Date","data","newStatus","type","window","postMessage","newPrivatestat","message","JSON","parse","action","setUser","userId","setPlayer","sessionId","error","disconnectTime","connected","connect","setTimeout","tableID","playerID","table","mess","command","tableId","emit","response","player","activateGame","token","operator","arguments","length","undefined","url","concat","res","fetch","method","body","stringify","credentials","headers","finalRes","json","fetchRequest","err","status","errCode","call","initRes","init","HitApi","playerId","splitApi","DoubleApi","stateHandApi","BetApi","newbetAmount","handId","sideBetApi","betType","StandApi","next","confirmBets","isSplitApi","TotalApi","insuranceApi","handNo"],"sources":["C:/Users/Jonathan/Documents/GitHub/BlackJackDev/blackjack-app/src/playerClient.js"],"sourcesContent":["import io from 'socket.io-client';\n\nlet info = {};\nconst backendUrl = `https://rngbj.kasoom.com/`;\n\nconst socket = io(backendUrl, {\n    withCredentials: true,\n    transports: ['websocket']\n});\n\nsocket.on('disconnect', (reason) => {\n    console.log(\"Disconnected: \", reason);\n    if (reason === \"io server disconnect\") {\n        tryReconnect(new Date());\n    } else if (reason === \"transport close\" || reason === \"ping timeout\") {\n        tryReconnect(new Date());\n    } else {\n        console.log(\"Unknown disconnection reason:\", reason);\n    }\n});\n\nsocket.on('newState', data => {\n    console.log(\"NewState Called...\");\n    data.newStatus = true;\n    data.type = 'newState';\n    console.log(data);\n    window.postMessage(data, \"*\");\n});\n\nsocket.on('newClientStatus', data => {\n    console.log('newClientStatus', data);\n    data.newStatus = true;\n    data.newPrivatestat = true;\n    window.postMessage(data, \"*\");\n});\n\nsocket.on('NewBalance', () => {\n    console.log('New balance function called!');\n});\n\nsocket.on(\"showMess\", data => {\n    console.log(\"Posting message: \", data);\n    data.type = \"showMess\";\n    window.postMessage(data, '*');\n});\n\nsocket.on('message', (message) => {\n    console.log('Received message:', message);\n    if (typeof message === 'string') {\n        const data = JSON.parse(message);\n        if (data.action === 'init_response') {\n            setUser(data.info.userId);\n            setPlayer(data.info.sessionId);\n        }\n    }\n});\n\nsocket.on('connect_error', (error) => {\n    console.log(\"Connection error:\", error.message);\n});\n\nsocket.on('error', (error) => {\n    console.error('WebSocket Error:', error);\n});\n\nsocket.on('reconnect_error', (error) => {\n    console.log(\"Reconnection error:\", error.message);\n});\n\nfunction tryReconnect(disconnectTime) {\n    console.log(\"Trying to reconnect... \", socket.connected);\n    if (!socket.connected) {\n        socket.connect();\n        setTimeout(() => {\n            tryReconnect();\n        }, 4000);\n    } else {\n        console.log(\"Connection reestablished!\");\n        setPlayer(info.tableID, info.playerID);\n    }\n}\n\nfunction setPlayer(table) {\n    console.log('Setting player with table: ', table);\n    let mess = {\n        type: 'delaerAction',\n        command: 'setTable',\n        tableId: table,\n    };\n    window.postMessage(mess, '*');\n    info.tableID = table;\n    socket.emit('setPlayer', mess, (response) => {\n        console.log('Response: ', response);\n        if (response && response.error) {\n            console.log('Emit error: ', response.error);\n        } else {\n            console.log('Emit successful: ', response);\n        }\n    });\n}\n\nfunction setUser(player) {\n    info.playerID = player;\n}\n\nasync function activateGame(token, operator = '') {\n    const url = `${backendUrl}api/init`;\n    console.log(\"Posting token: \", url, token);\n\n    let res = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n            token: token,\n            operator: operator,\n        }),\n        credentials: 'include',\n        headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'access-control-allow-credentials': true,\n            'withCredentials': true\n        }\n    });\n\n    let finalRes = await res.json();\n    console.log(\"Activation response: \", finalRes);\n    return finalRes;\n}\n\nconst fetchRequest = async (command, method, body) => {\n    try {\n        const res = await fetch(`${backendUrl}api/${command}`, {\n            method: method,\n            headers: {\n                'Content-Type': 'application/json; charset=UTF-8',\n                'access-control-allow-credentials': true,\n                'withCredentials': true\n            },\n            credentials: 'include',\n            body: JSON.stringify(body)\n        });\n        return await res.json();\n    } catch (err) {\n        console.log('Error fetching: ', err);\n        return {\n            status: 'azErr',\n            errCode: 'fetchErr'\n        };\n    }\n};\n\nconst call = async (command, method, body) => {\n    const res = await fetchRequest(command, method, body);\n    if (res.status === 'azErr') {\n        const errCode = res.errCode;\n        if (errCode == 'noSession') {\n            const initRes = await init();\n            if (initRes.status === 'OK') {\n                return await call(command, method, body);\n            }\n        }\n        console.log('Fetch error: ', res);\n    }\n    return res;\n};\n\nasync function init(token) {\n    const res = await fetchRequest(`init?token=${token}`, 'GET');\n    console.log('Init response: ', res);\n    return res;\n}\n\nconst HitApi = async (playerId, tableId) => call(`hit/${playerId}/${tableId}`, 'GET');\nconst splitApi = (playerId, tableId) => call(`split/${playerId}/${tableId}`, 'GET');\nconst DoubleApi = (playerId, tableId) => call(`double/${playerId}/${tableId}`, 'GET');\nconst stateHandApi = (playerId, tableId) => call(`stateHand/${playerId}/${tableId}`, 'GET');\nconst BetApi = (playerId, tableId, newbetAmount, handId) => call(`bet/${playerId}/${tableId}/${handId}/${newbetAmount}`, 'GET');\nconst sideBetApi = (playerId, tableId, newbetAmount, handId, betType) => call(`sideBet/${playerId}/${tableId}/${handId}/${newbetAmount}/${betType}`, 'GET');\nconst StandApi = (playerId, tableId) => call(`stand/${playerId}/${tableId}`, 'GET');\nconst next = (playerId, tableId) => call(`next/${playerId}/${tableId}`, 'GET');\nconst confirmBets = (playerId, tableId) => call(`confirmBets/${playerId}/${tableId}`, 'GET');\nconst isSplitApi = (playerId, tableId) => call(`isSplit/${playerId}/${tableId}`, 'GET');\nconst TotalApi = (playerId, tableId) => call(`total/${playerId}/${tableId}`, 'GET');\nconst insuranceApi = (playerId, tableId, handNo) => call(`insurance/${tableId}/${playerId}/${handNo}`, 'GET');\n\nexport {\n    setUser,\n    HitApi,\n    splitApi,\n    stateHandApi,\n    BetApi,\n    StandApi,\n    DoubleApi,\n    isSplitApi,\n    init,\n    TotalApi,\n    insuranceApi,\n    next,\n    confirmBets,\n    setPlayer,\n    sideBetApi,\n    activateGame\n};"],"mappings":"AAAA,MAAO,CAAAA,EAAE,KAAM,kBAAkB,CAEjC,GAAI,CAAAC,IAAI,CAAG,CAAC,CAAC,CACb,KAAM,CAAAC,UAAU,4BAA8B,CAE9C,KAAM,CAAAC,MAAM,CAAGH,EAAE,CAACE,UAAU,CAAE,CAC1BE,eAAe,CAAE,IAAI,CACrBC,UAAU,CAAE,CAAC,WAAW,CAC5B,CAAC,CAAC,CAEFF,MAAM,CAACG,EAAE,CAAC,YAAY,CAAGC,MAAM,EAAK,CAChCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEF,MAAM,CAAC,CACrC,GAAIA,MAAM,GAAK,sBAAsB,CAAE,CACnCG,YAAY,CAAC,GAAI,CAAAC,IAAI,CAAC,CAAC,CAAC,CAC5B,CAAC,IAAM,IAAIJ,MAAM,GAAK,iBAAiB,EAAIA,MAAM,GAAK,cAAc,CAAE,CAClEG,YAAY,CAAC,GAAI,CAAAC,IAAI,CAAC,CAAC,CAAC,CAC5B,CAAC,IAAM,CACHH,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEF,MAAM,CAAC,CACxD,CACJ,CAAC,CAAC,CAEFJ,MAAM,CAACG,EAAE,CAAC,UAAU,CAAEM,IAAI,EAAI,CAC1BJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACjCG,IAAI,CAACC,SAAS,CAAG,IAAI,CACrBD,IAAI,CAACE,IAAI,CAAG,UAAU,CACtBN,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC,CACjBG,MAAM,CAACC,WAAW,CAACJ,IAAI,CAAE,GAAG,CAAC,CACjC,CAAC,CAAC,CAEFT,MAAM,CAACG,EAAE,CAAC,iBAAiB,CAAEM,IAAI,EAAI,CACjCJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEG,IAAI,CAAC,CACpCA,IAAI,CAACC,SAAS,CAAG,IAAI,CACrBD,IAAI,CAACK,cAAc,CAAG,IAAI,CAC1BF,MAAM,CAACC,WAAW,CAACJ,IAAI,CAAE,GAAG,CAAC,CACjC,CAAC,CAAC,CAEFT,MAAM,CAACG,EAAE,CAAC,YAAY,CAAE,IAAM,CAC1BE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC/C,CAAC,CAAC,CAEFN,MAAM,CAACG,EAAE,CAAC,UAAU,CAAEM,IAAI,EAAI,CAC1BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEG,IAAI,CAAC,CACtCA,IAAI,CAACE,IAAI,CAAG,UAAU,CACtBC,MAAM,CAACC,WAAW,CAACJ,IAAI,CAAE,GAAG,CAAC,CACjC,CAAC,CAAC,CAEFT,MAAM,CAACG,EAAE,CAAC,SAAS,CAAGY,OAAO,EAAK,CAC9BV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAES,OAAO,CAAC,CACzC,GAAI,MAAO,CAAAA,OAAO,GAAK,QAAQ,CAAE,CAC7B,KAAM,CAAAN,IAAI,CAAGO,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,CAChC,GAAIN,IAAI,CAACS,MAAM,GAAK,eAAe,CAAE,CACjCC,OAAO,CAACV,IAAI,CAACX,IAAI,CAACsB,MAAM,CAAC,CACzBC,SAAS,CAACZ,IAAI,CAACX,IAAI,CAACwB,SAAS,CAAC,CAClC,CACJ,CACJ,CAAC,CAAC,CAEFtB,MAAM,CAACG,EAAE,CAAC,eAAe,CAAGoB,KAAK,EAAK,CAClClB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEiB,KAAK,CAACR,OAAO,CAAC,CACnD,CAAC,CAAC,CAEFf,MAAM,CAACG,EAAE,CAAC,OAAO,CAAGoB,KAAK,EAAK,CAC1BlB,OAAO,CAACkB,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CAC5C,CAAC,CAAC,CAEFvB,MAAM,CAACG,EAAE,CAAC,iBAAiB,CAAGoB,KAAK,EAAK,CACpClB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEiB,KAAK,CAACR,OAAO,CAAC,CACrD,CAAC,CAAC,CAEF,QAAS,CAAAR,YAAYA,CAACiB,cAAc,CAAE,CAClCnB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEN,MAAM,CAACyB,SAAS,CAAC,CACxD,GAAI,CAACzB,MAAM,CAACyB,SAAS,CAAE,CACnBzB,MAAM,CAAC0B,OAAO,CAAC,CAAC,CAChBC,UAAU,CAAC,IAAM,CACbpB,YAAY,CAAC,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,IAAM,CACHF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxCe,SAAS,CAACvB,IAAI,CAAC8B,OAAO,CAAE9B,IAAI,CAAC+B,QAAQ,CAAC,CAC1C,CACJ,CAEA,QAAS,CAAAR,SAASA,CAACS,KAAK,CAAE,CACtBzB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEwB,KAAK,CAAC,CACjD,GAAI,CAAAC,IAAI,CAAG,CACPpB,IAAI,CAAE,cAAc,CACpBqB,OAAO,CAAE,UAAU,CACnBC,OAAO,CAAEH,KACb,CAAC,CACDlB,MAAM,CAACC,WAAW,CAACkB,IAAI,CAAE,GAAG,CAAC,CAC7BjC,IAAI,CAAC8B,OAAO,CAAGE,KAAK,CACpB9B,MAAM,CAACkC,IAAI,CAAC,WAAW,CAAEH,IAAI,CAAGI,QAAQ,EAAK,CACzC9B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAE6B,QAAQ,CAAC,CACnC,GAAIA,QAAQ,EAAIA,QAAQ,CAACZ,KAAK,CAAE,CAC5BlB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE6B,QAAQ,CAACZ,KAAK,CAAC,CAC/C,CAAC,IAAM,CACHlB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE6B,QAAQ,CAAC,CAC9C,CACJ,CAAC,CAAC,CACN,CAEA,QAAS,CAAAhB,OAAOA,CAACiB,MAAM,CAAE,CACrBtC,IAAI,CAAC+B,QAAQ,CAAGO,MAAM,CAC1B,CAEA,cAAe,CAAAC,YAAYA,CAACC,KAAK,CAAiB,IAAf,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC5C,KAAM,CAAAG,GAAG,IAAAC,MAAA,CAAM7C,UAAU,YAAU,CACnCM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEqC,GAAG,CAAEL,KAAK,CAAC,CAE1C,GAAI,CAAAO,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACH,GAAG,CAAE,CACvBI,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEhC,IAAI,CAACiC,SAAS,CAAC,CACjBX,KAAK,CAAEA,KAAK,CACZC,QAAQ,CAAEA,QACd,CAAC,CAAC,CACFW,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,CACL,cAAc,CAAE,iCAAiC,CACjD,kCAAkC,CAAE,IAAI,CACxC,iBAAiB,CAAE,IACvB,CACJ,CAAC,CAAC,CAEF,GAAI,CAAAC,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAC/BhD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAE8C,QAAQ,CAAC,CAC9C,MAAO,CAAAA,QAAQ,CACnB,CAEA,KAAM,CAAAE,YAAY,CAAG,KAAAA,CAAOtB,OAAO,CAAEe,MAAM,CAAEC,IAAI,GAAK,CAClD,GAAI,CACA,KAAM,CAAAH,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAF,MAAA,CAAI7C,UAAU,SAAA6C,MAAA,CAAOZ,OAAO,EAAI,CACnDe,MAAM,CAAEA,MAAM,CACdI,OAAO,CAAE,CACL,cAAc,CAAE,iCAAiC,CACjD,kCAAkC,CAAE,IAAI,CACxC,iBAAiB,CAAE,IACvB,CAAC,CACDD,WAAW,CAAE,SAAS,CACtBF,IAAI,CAAEhC,IAAI,CAACiC,SAAS,CAACD,IAAI,CAC7B,CAAC,CAAC,CACF,MAAO,MAAM,CAAAH,GAAG,CAACQ,IAAI,CAAC,CAAC,CAC3B,CAAE,MAAOE,GAAG,CAAE,CACVlD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEiD,GAAG,CAAC,CACpC,MAAO,CACHC,MAAM,CAAE,OAAO,CACfC,OAAO,CAAE,UACb,CAAC,CACL,CACJ,CAAC,CAED,KAAM,CAAAC,IAAI,CAAG,KAAAA,CAAO1B,OAAO,CAAEe,MAAM,CAAEC,IAAI,GAAK,CAC1C,KAAM,CAAAH,GAAG,CAAG,KAAM,CAAAS,YAAY,CAACtB,OAAO,CAAEe,MAAM,CAAEC,IAAI,CAAC,CACrD,GAAIH,GAAG,CAACW,MAAM,GAAK,OAAO,CAAE,CACxB,KAAM,CAAAC,OAAO,CAAGZ,GAAG,CAACY,OAAO,CAC3B,GAAIA,OAAO,EAAI,WAAW,CAAE,CACxB,KAAM,CAAAE,OAAO,CAAG,KAAM,CAAAC,IAAI,CAAC,CAAC,CAC5B,GAAID,OAAO,CAACH,MAAM,GAAK,IAAI,CAAE,CACzB,MAAO,MAAM,CAAAE,IAAI,CAAC1B,OAAO,CAAEe,MAAM,CAAEC,IAAI,CAAC,CAC5C,CACJ,CACA3C,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEuC,GAAG,CAAC,CACrC,CACA,MAAO,CAAAA,GAAG,CACd,CAAC,CAED,cAAe,CAAAe,IAAIA,CAACtB,KAAK,CAAE,CACvB,KAAM,CAAAO,GAAG,CAAG,KAAM,CAAAS,YAAY,eAAAV,MAAA,CAAeN,KAAK,EAAI,KAAK,CAAC,CAC5DjC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEuC,GAAG,CAAC,CACnC,MAAO,CAAAA,GAAG,CACd,CAEA,KAAM,CAAAgB,MAAM,CAAG,KAAAA,CAAOC,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,QAAAd,MAAA,CAAQkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CACrF,KAAM,CAAA8B,QAAQ,CAAGA,CAACD,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,UAAAd,MAAA,CAAUkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CACnF,KAAM,CAAA+B,SAAS,CAAGA,CAACF,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,WAAAd,MAAA,CAAWkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CACrF,KAAM,CAAAgC,YAAY,CAAGA,CAACH,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,cAAAd,MAAA,CAAckB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CAC3F,KAAM,CAAAiC,MAAM,CAAGA,CAACJ,QAAQ,CAAE7B,OAAO,CAAEkC,YAAY,CAAEC,MAAM,GAAKV,IAAI,QAAAd,MAAA,CAAQkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,MAAAW,MAAA,CAAIwB,MAAM,MAAAxB,MAAA,CAAIuB,YAAY,EAAI,KAAK,CAAC,CAC/H,KAAM,CAAAE,UAAU,CAAGA,CAACP,QAAQ,CAAE7B,OAAO,CAAEkC,YAAY,CAAEC,MAAM,CAAEE,OAAO,GAAKZ,IAAI,YAAAd,MAAA,CAAYkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,MAAAW,MAAA,CAAIwB,MAAM,MAAAxB,MAAA,CAAIuB,YAAY,MAAAvB,MAAA,CAAI0B,OAAO,EAAI,KAAK,CAAC,CAC3J,KAAM,CAAAC,QAAQ,CAAGA,CAACT,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,UAAAd,MAAA,CAAUkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CACnF,KAAM,CAAAuC,IAAI,CAAGA,CAACV,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,SAAAd,MAAA,CAASkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CAC9E,KAAM,CAAAwC,WAAW,CAAGA,CAACX,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,gBAAAd,MAAA,CAAgBkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CAC5F,KAAM,CAAAyC,UAAU,CAAGA,CAACZ,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,YAAAd,MAAA,CAAYkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CACvF,KAAM,CAAA0C,QAAQ,CAAGA,CAACb,QAAQ,CAAE7B,OAAO,GAAKyB,IAAI,UAAAd,MAAA,CAAUkB,QAAQ,MAAAlB,MAAA,CAAIX,OAAO,EAAI,KAAK,CAAC,CACnF,KAAM,CAAA2C,YAAY,CAAGA,CAACd,QAAQ,CAAE7B,OAAO,CAAE4C,MAAM,GAAKnB,IAAI,cAAAd,MAAA,CAAcX,OAAO,MAAAW,MAAA,CAAIkB,QAAQ,MAAAlB,MAAA,CAAIiC,MAAM,EAAI,KAAK,CAAC,CAE7G,OACI1D,OAAO,CACP0C,MAAM,CACNE,QAAQ,CACRE,YAAY,CACZC,MAAM,CACNK,QAAQ,CACRP,SAAS,CACTU,UAAU,CACVd,IAAI,CACJe,QAAQ,CACRC,YAAY,CACZJ,IAAI,CACJC,WAAW,CACXpD,SAAS,CACTgD,UAAU,CACVhC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}